Query - Join
-----------------------
Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

    SELECT students.*
    FROM degrees
    JOIN students
    ON degrees.id = students.degree_id
    WHERE degrees.name LIKE 'Corso di Laurea in Economia'

-----------------------
Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze

    SELECT degrees.*
    FROM departments
    JOIN degrees
    ON departments.id = degrees.department_id
    WHERE departments.name LIKE 'Dipartimento di Neuroscienze'
    AND degrees.level LIKE 'Magistrale'

-----------------------
Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

    SELECT *
    FROM courses
    JOIN course_teacher
        ON courses.id = course_teacher.course_id
    JOIN teachers
        ON course_teacher.teacher_id = teachers.id
    WHERE teachers.name LIKE 'fulvio' 
	AND teachers.surname LIKE 'amato''

-----------------------
Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
nome

    SELECT students.*, departments.name, degrees.name
    FROM departments
    JOIN degrees
    ON departments.id = degrees.department_id
    JOIN students
    ON degrees.id = students.degree_id
    ORDER BY students.surname, students.name

-----------------------
Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

    SELECT degrees.*, teachers.*, courses.*
    FROM teachers
    JOIN course_teacher
    ON teachers.id = course_teacher.teacher_id
    JOIN courses
    ON course_teacher.course_id = courses.id
    JOIN degrees
    ON courses.degree_id = degrees.id    

-----------------------
Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)

   SELECT DISTINCT teachers.*
    FROM departments
    JOIN degrees
        ON departments.id = degrees.department_id
    JOIN courses
        ON degrees.id = courses.degree_id
    JOIN course_teacher
        ON courses.id = course_teacher.course_id
    JOIN teachers
        ON course_teacher.teacher_id = teachers.id
    WHERE departments.name LIKE "Dipartimento di Matematica";

-----------------------
Bonus
Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,
filtrare i tentativi con voto minimo 18.

-- VERSION 1
SELECT students.name, students.surname, courses.name, COUNT(*) AS 'exam_count', MAX(exam_student.vote) AS 'voto_max'
FROM students
    JOIN exam_student
        ON students.id = exam_student.student_id
    JOIN exams
        ON exam_student.exam_id = exams.id
    JOIN courses
        ON exams.course_id = courses.id
GROUP BY students.id, courses.id;

-- VERSION 2
SELECT students.name, students.surname, courses.name, COUNT(*) AS 'exam_count', MAX(exam_student.vote) AS 'voto_max'
FROM students
    JOIN exam_student
        ON students.id = exam_student.student_id
    JOIN exams
        ON exam_student.exam_id = exams.id
    JOIN courses
        ON exams.course_id = courses.id
WHERE exam_student.vote >= 18
GROUP BY students.id, courses.id;